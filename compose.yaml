services:
  testrunner:
    image: $DEV_IMAGE_TAG
    build:
      dockerfile: Dockerfile.dev
      context: .
      args:
        OTP_VERSION: $OTP_VERSION
    volumes:
      - .:$PWD
    hostname: $SERVICE_NAME
    cap_add:
      - NET_ADMIN
    depends_on:
      - riakdb
      - member1
      - member2
      - kafka1
      - kafka2
      - kafka3
      - consul1
      - consul2
      - consul0
      - scylla0
    working_dir: $PWD
    command: /sbin/init

  riakdb: &member-node
    image: docker.io/basho/riak-kv:${RIAK_VERSION}
    environment:
      - CLUSTER_NAME=riakkv
      - COORDINATOR_NODE=riakdb
    labels:
      - "com.basho.riak.cluster.name=riakkv"
    volumes:
      - ./test_resources/riak_user.conf:/etc/riak/user.conf:ro
      - schemas:/etc/riak/schemas
  member1:
    <<: *member-node
    links:
      - riakdb
    depends_on:
      - riakdb
  member2:
    <<: *member-node
    links:
      - riakdb
    depends_on:
      - riakdb

  zookeeper:
    image: docker.io/confluentinc/cp-zookeeper:${CONFLUENT_PLATFORM_VERSION}
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka1: &kafka-broker
    image: docker.io/confluentinc/cp-kafka:${CONFLUENT_PLATFORM_VERSION}
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
  kafka2:
    <<: *kafka-broker
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
  kafka3:
    <<: *kafka-broker
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092

  consul1: &consul-server
    image: docker.io/consul:${CONSUL_VERSION}
    volumes:
      - ./test_resources/consul.json:/etc/consul/consul.json
    hostname: consul1
    command:
      agent -server -config-dir=/etc/consul

  consul2:
    <<: *consul-server
    hostname: consul2

  consul0:
    <<: *consul-server
    hostname: consul0

  scylla0:
    image: docker.io/scylladb/scylla:5.4

volumes:
  schemas:
    external: false
