services:

  testrunner:
    image: $DEV_IMAGE_TAG
    environment:
      WORK_DIR: $PWD
    build:
      dockerfile: Dockerfile.dev
      context: .
      args:
        OTP_VERSION: $OTP_VERSION
        THRIFT_VERSION: $THRIFT_VERSION
    volumes:
      - .:$PWD
    hostname: ${SERVICE_NAME}-0
    cap_add:
      - NET_ADMIN
    working_dir: $PWD
    depends_on:
      riakdb:
        condition: service_started
      member1:
        condition: service_started
      member2:
        condition: service_started
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
      consul0:
        condition: service_started
      consul1:
        condition: service_started
      consul2:
        condition: service_started

      distrunner1:
        condition: service_started
      distrunner2:
        condition: service_started
      distrunner3:
        condition: service_started
      distrunner4:
        condition: service_started

    ports:
      - "8022"
    command: /sbin/init

  distrunner1: &mg-cluster
    image: distrunner-test
    # scale: 2
    hostname: ${SERVICE_NAME}-1
    build:
      dockerfile: Dockerfile.test
      context: .
      args:
        OTP_VERSION: $OTP_VERSION
        THRIFT_VERSION: $THRIFT_VERSION
    cap_add:
      - NET_ADMIN

  distrunner2:
    <<: *mg-cluster
    hostname: ${SERVICE_NAME}-2

  distrunner3:
    <<: *mg-cluster
    hostname: ${SERVICE_NAME}-3

  distrunner4:
    <<: *mg-cluster
    hostname: ${SERVICE_NAME}-4

  riakdb: &member-node
    image: docker.io/basho/riak-kv:${RIAK_VERSION}
    environment:
      - CLUSTER_NAME=riakkv
      - COORDINATOR_NODE=riakdb
    labels:
      - "com.basho.riak.cluster.name=riakkv"
    volumes:
      - ./test_resources/riak_user.conf:/etc/riak/user.conf:ro
      - schemas:/etc/riak/schemas
  member1:
    <<: *member-node
    links:
      - riakdb
    depends_on:
      - riakdb
  member2:
    <<: *member-node
    links:
      - riakdb
    depends_on:
      - riakdb

  zookeeper:
    image: docker.io/confluentinc/cp-zookeeper:${CONFLUENT_PLATFORM_VERSION}
    healthcheck:
      test: echo ruok | nc 127.0.0.1 2181 || exit -1
      interval: 5s
      timeout: 240s #🍎
      retries: 50
    environment:
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka1: &kafka-broker
    image: docker.io/confluentinc/cp-kafka:${CONFLUENT_PLATFORM_VERSION}
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092

  kafka2:
    <<: *kafka-broker
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092

  kafka3:
    <<: *kafka-broker
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092

  consul1: &consul-server
    image: docker.io/consul:${CONSUL_VERSION}
    volumes:
      - ./test_resources/consul.json:/etc/consul/consul.json
    hostname: consul1
    command:
      agent -server -config-dir=/etc/consul

  consul2:
    <<: *consul-server
    hostname: consul2

  consul0:
    <<: *consul-server
    hostname: consul0

volumes:
  schemas:
    external: false
