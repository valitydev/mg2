services:

  testrunner:
    image: $DEV_IMAGE_TAG
    build:
      dockerfile: Dockerfile.dev
      context: .
      args:
        OTP_VERSION: $OTP_VERSION
        THRIFT_VERSION: $THRIFT_VERSION
    volumes:
      - .:$PWD
    hostname: $SERVICE_NAME
    cap_add:
      - NET_ADMIN
    working_dir: $PWD
    environment:
      OTEL_TRACES_EXPORTER: none
      OTEL_TRACES_SAMPLER: always_off
    depends_on:
      riakdb:
        condition: service_started
      member1:
        condition: service_started
      member2:
        condition: service_started
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
      scylla0:
        condition: service_healthy
    ports:
      - "8022"
    command: /sbin/init

  riakdb: &member-node
    image: docker.io/basho/riak-kv:${RIAK_VERSION}
    environment:
      - CLUSTER_NAME=riakkv
      - COORDINATOR_NODE=riakdb
    labels:
      - "com.basho.riak.cluster.name=riakkv"
    volumes:
      - ./test_resources/riak_user.conf:/etc/riak/user.conf:ro
      - schemas:/etc/riak/schemas
  member1:
    <<: *member-node
    links:
      - riakdb
    depends_on:
      - riakdb
  member2:
    <<: *member-node
    links:
      - riakdb
    depends_on:
      - riakdb

  zookeeper:
    image: docker.io/confluentinc/cp-zookeeper:${CONFLUENT_PLATFORM_VERSION}
    healthcheck:
      test: echo ruok | nc 127.0.0.1 2181 || exit -1
      interval: 5s
      timeout: 240s #🍎
      retries: 50
    environment:
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka1: &kafka-broker
    image: docker.io/confluentinc/cp-kafka:${CONFLUENT_PLATFORM_VERSION}
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092

  kafka2:
    <<: *kafka-broker
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092

  kafka3:
    <<: *kafka-broker
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092

  scylla0:
    image: docker.io/scylladb/scylla:5.4

volumes:
  schemas:
    external: false
